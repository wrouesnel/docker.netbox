global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: '{{SMTP_SMARTHOST}}'
  smtp_from: '{{SMTP_FROM}}'
  smtp_auth_username: '{{SMTP_USERNAME}}'
  smtp_auth_password: '{{SMTP_PASSWORD}}'
{% if DEV_NO_SMARTHOST_TLS|default:"no" == "yes" %}
  smtp_require_tls: false
{% endif %}
# The directory from which notification templates are read.
templates: 
- '/etc/alertmanager/template/*.tmpl'

# The root route on which each incoming alert enters.
route:
  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  group_by: ['alertname', 'instance']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first 
  # notification.
  group_wait: 30s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 5m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 12h

  # A default receiver
  receiver: alerts

  # All the above attributes are inherited by all child routes and can 
  # overwritten on each.

  # The child route trees.
  routes:
  - match:
      alertname: SSLCertificateExpiring
    routes:
    - match:
        severity: info
      repeat_interval: 360h
    - match:
        severity: warning
      repeat_interval: 120h
    - match:
        severity: critical
      repeat_interval: 12h
    - match:
        severity: incident
      repeat_interval: 30m

# Inhibition rules allow to mute a set of alerts given that another alert is
# firing.
# We use this to mute any warning-level notifications if the same alert is 
# already critical.
inhibit_rules:
- source_match:
    severity: 'incident'
  target_match:
    severity: 'critical'
  equal: ['alertname']
- source_match:
    severity: 'critical'
  target_match:
    severity: 'warning'
  equal: ['alertname']
- source_match:
    severity: 'warning'
  target_match:
    severity: 'info'
  equal: ['alertname']

receivers:
- name: 'alerts'
{% if ALERT_EMAIL_ADDRESSES|default:"" != "" %}
  email_configs:
{% for email_address in ALERT_EMAIL_ADDRESSES|split:" " %}
  - to: '{{email_address}}'
    send_resolved: true
{% endfor %}
{% endif %}
