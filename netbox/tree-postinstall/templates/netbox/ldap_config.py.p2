
import ldap
from django_auth_ldap.config import LDAPSearch, GroupOfNamesType, NestedGroupOfNamesType

{% if NETBOX_LDAP_AUTH == "y" %}

# Server URI
AUTH_LDAP_SERVER_URI = "{{NETBOX_LDAP_SERVER_URI|safe}}"

# The following may be needed if you are binding to Active Directory.
AUTH_LDAP_CONNECTION_OPTIONS = {
    ldap.OPT_REFERRALS: 0
}

AUTH_LDAP_PROTOCOL_VERSION = 3

# Include this setting if you want to ignore certificate errors. This might be needed to accept a self-signed cert.
# Note that this is a NetBox-specific setting which sets:
#     ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER)
LDAP_IGNORE_CERT_ERRORS = False

# Set the DN and password for the NetBox service account to bind to LDAP.
AUTH_LDAP_BIND_DN = "{{NETBOX_LDAP_SERVER_BIND_DN|safe}}"
AUTH_LDAP_BIND_PASSWORD = "{{NETBOX_LDAP_SERVER_BIND_PASSWORD|safe}}"

AUTH_LDAP_USER_SEARCH = LDAPSearch("{{NETBOX_LDAP_USER_BASE_DN|safe}}",
                                    ldap.SCOPE_SUBTREE,
                                    "{{NETBOX_LDAP_USER_SEARCH_FILTER|safe}}")

{% if NETBOX_LDAP_USER_DN_TEMPLATE|default:"" != "" %}
# Direct bind support instead - no service accounts required.
AUTH_LDAP_USER_DN_TEMPLATE = "{{NETBOX_LDAP_USER_DN_TEMPLATE|safe}}"
{% endif %}

# This search ought to return all groups to which the user belongs. django_auth_ldap uses this to determine group
# hierarchy.
AUTH_LDAP_GROUP_SEARCH = LDAPSearch("{{NETBOX_LDAP_GROUP_BASE_DN|safe}}", ldap.SCOPE_SUBTREE,
                                    "{{NETBOX_LDAP_GROUP_SEARCH_FILTER|safe}}")
AUTH_LDAP_GROUP_TYPE = NestedGroupOfNamesType()

# Define a group required to login.
{% if NETBOX_LDAP_GROUP_REQUIRED_DN|default:""|safe != "" %}
AUTH_LDAP_REQUIRE_GROUP = "{{NETBOX_LDAP_GROUP_REQUIRED_DN|safe}}"
{% endif %}

# Define special user types using groups. Exercise great caution when assigning superuser status.
AUTH_LDAP_USER_FLAGS_BY_GROUP = {
    "is_active": "{{NETBOX_LDAP_GROUP_USER_ACTIVE_DN|safe}}",
    "is_staff": "{{NETBOX_LDAP_GROUP_USER_STAFF_DN|safe}}",
    "is_superuser": "{{NETBOX_LDAP_GROUP_USER_SUPERUSER_DN|safe}}"
}

# For more granular permissions, we can map LDAP groups to Django groups.
AUTH_LDAP_FIND_GROUP_PERMS = True

# Cache groups for one hour to reduce LDAP traffic
AUTH_LDAP_CACHE_GROUPS = True
AUTH_LDAP_GROUP_CACHE_TIMEOUT = 3600

AUTH_LDAP_USER_ATTR_MAP = {
    "first_name": "givenName",
    "last_name": "sn",
    "email": "mail"
}

{% else %}
# LDAP Authentication was disabled on container launch.
{% endif %}
